# JG TCL script for evaluating the Design2SVA task results
# (1) elaborate testbench generated by a LM via the Design2SVA benchmark
# (2) run formal proof jobs on each of the LM generated assertions 
# (3) measure formal coverage via the Japser Coverage App
# Possible outcomes:
# 1. Syntax error in the testbench; this will be caught during elaboration and script will immediately exit
# 2. Proof failure: some of the LM generated assertions will be proven false; script proceeds to formal coverage analysis
# 3. Succss: script completes formal coverage analysis, prints to STDOUT formal coverage results

# Analyze property files
clear -all
# check_cov -init
analyze -clear
analyze -sv12 ${SV_DIR}/${EXP_ID}_${TASK_ID}.sv
analyze -sv12 ${SV_DIR}/${EXP_ID}_${TASK_ID}.sva

# Elaborate design and properties
elaborate
set top [get_inst_top]
puts "top: $top"
set_reset_max_iterations 1000
clock clk
reset -expression (${top}_tb_inst.tb_reset)

prove -all

# Run coverage
# check_cov -measure -type stimuli -silent -time_limit 5m
# check_cov -measure -type proof -silent -time_limit 5m
# check_cov -report -type formal -silent

puts "proofs: [get_status [get_property_list -include {type {assert} disabled {0}}]]"
