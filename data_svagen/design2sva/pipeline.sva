`define WIDTH 128
`define DEPTH 84

module pipeline_tb (
    clk,
    reset_,
    in_vld,
    in_data,
    out_vld,
    out_data
);
    parameter WIDTH=`WIDTH;
    parameter DEPTH=`DEPTH;

    input clk;
    input reset_;
    input in_vld;
    input [WIDTH-1:0] in_data;
    input out_vld;
    input [WIDTH-1:0] out_data;

    assign tb_reset = (reset_ == 1'b0);
    wire [WIDTH-1:0] data_0;
    assign data_0 = (((in_data - 6) >>> 1) | 7);
    wire [WIDTH-1:0] data_1;
    assign data_1 = (((data_0 - 6) >>> 1) | 7);
    wire [WIDTH-1:0] data_2;
    assign data_2 = (((data_1 - 6) >>> 1) | 7);
    wire [WIDTH-1:0] data_3;
    assign data_3 = (((data_2 - 6) >>> 1) | 7);
    wire [WIDTH-1:0] data_4;
    assign data_4 = (((data_3 + 7) | 3) & 6);
    wire [WIDTH-1:0] data_5;
    assign data_5 = (((((data_4 ^ 6) | 7) - 10) >>> (data_4 + 1)) - (data_4 + 6));
    wire [WIDTH-1:0] data_6;
    assign data_6 = (((((data_5 ^ 6) | 7) - 10) >>> (data_5 + 1)) - (data_5 + 6));
    wire [WIDTH-1:0] data_7;
    assign data_7 = (((((data_6 ^ 6) | 7) - 10) >>> (data_6 + 1)) - (data_6 + 6));
    wire [WIDTH-1:0] data_8;
    assign data_8 = (((((data_7 - 8) >>> ((data_7 & 8) ^ (data_7 >>> 8))) + (data_7 | 5)) & ((data_7 + 5) >>> (((data_7 | 4) ^ 8) >>> (data_7 <<< 2)))) ^ (((data_7 & 4) ^ (((data_7 & 3) <<< 3) - ((data_7 | 6) >>> (data_7 <<< 1)))) + ((data_7 | 9) >>> (data_7 <<< 8))));
    wire [WIDTH-1:0] data_9;
    assign data_9 = (((data_8 & 2) >>> 1) & (data_8 <<< 4));
    wire [WIDTH-1:0] data_10;
    assign data_10 = ((((data_9 <<< 5) - ((data_9 <<< 9) <<< ((data_9 | 5) + 1))) ^ 7) - (data_9 >>> 10));
    wire [WIDTH-1:0] data_11;
    assign data_11 = ((((data_10 <<< 5) - ((data_10 <<< 9) <<< ((data_10 | 5) + 1))) ^ 7) - (data_10 >>> 10));
    wire [WIDTH-1:0] data_12;
    assign data_12 = ((((data_11 <<< 5) - ((data_11 <<< 9) <<< ((data_11 | 5) + 1))) ^ 7) - (data_11 >>> 10));
    wire [WIDTH-1:0] data_13;
    assign data_13 = ((((data_12 <<< 5) - ((data_12 <<< 9) <<< ((data_12 | 5) + 1))) ^ 7) - (data_12 >>> 10));
    wire [WIDTH-1:0] data_14;
    assign data_14 = ((((data_13 & 7) <<< (data_13 | 2)) ^ 9) - 10);
    wire [WIDTH-1:0] data_15;
    assign data_15 = ((data_14 & 3) - 7);
    wire [WIDTH-1:0] data_16;
    assign data_16 = (((data_15 >>> 4) - ((data_15 & 5) - 4)) ^ 4);
    wire [WIDTH-1:0] data_17;
    assign data_17 = (((data_16 & 10) & 8) ^ 4);
    wire [WIDTH-1:0] data_18;
    assign data_18 = (((((data_17 >>> 6) | 2) - 3) <<< 6) + 4);
    wire [WIDTH-1:0] data_19;
    assign data_19 = (((((data_18 >>> 6) | 2) - 3) <<< 6) + 4);
    wire [WIDTH-1:0] data_20;
    assign data_20 = (((((data_19 >>> 6) | 2) - 3) <<< 6) + 4);
    wire [WIDTH-1:0] data_21;
    assign data_21 = (((((data_20 ^ 8) <<< 3) >>> (data_20 & 6)) & 8) | 5);
    wire [WIDTH-1:0] data_22;
    assign data_22 = (((((data_21 + 2) + 1) - ((data_21 - 1) ^ 1)) + 8) + (((data_21 & 6) <<< 5) ^ ((data_21 - 3) <<< ((data_21 + 6) ^ (data_21 - 7)))));
    wire [WIDTH-1:0] data_23;
    assign data_23 = (((data_22 | 1) + 7) & (data_22 & 5));
    wire [WIDTH-1:0] data_24;
    assign data_24 = (((data_23 | 1) + 7) & (data_23 & 5));
    wire [WIDTH-1:0] data_25;
    assign data_25 = (((((data_24 + 1) + 6) + (data_24 + 3)) - 10) | 4);
    wire [WIDTH-1:0] data_26;
    assign data_26 = (((((data_25 + 1) + 6) + (data_25 + 3)) - 10) | 4);
    wire [WIDTH-1:0] data_27;
    assign data_27 = (((((data_26 + 1) + 6) + (data_26 + 3)) - 10) | 4);
    wire [WIDTH-1:0] data_28;
    assign data_28 = (((((data_27 + 1) + 6) + (data_27 + 3)) - 10) | 4);
    wire [WIDTH-1:0] data_29;
    assign data_29 = (((data_28 >>> 4) ^ (((data_28 <<< 10) <<< (data_28 >>> 3)) - (data_28 <<< 4))) + 10);
    wire [WIDTH-1:0] data_30;
    assign data_30 = ((((((data_29 & 1) >>> (data_29 | 10)) & 8) | (data_29 + 5)) >>> 6) <<< 9);
    wire [WIDTH-1:0] data_31;
    assign data_31 = (((((data_30 + 3) + (data_30 | 10)) >>> 3) + 6) | 4);
    wire [WIDTH-1:0] data_32;
    assign data_32 = ((((data_31 & 4) >>> 3) + (data_31 | 7)) ^ ((((data_31 | 6) ^ ((data_31 >>> 5) <<< 5)) ^ ((data_31 & 1) ^ 4)) | 6));
    wire [WIDTH-1:0] data_33;
    assign data_33 = ((((data_32 & 4) >>> 3) + (data_32 | 7)) ^ ((((data_32 | 6) ^ ((data_32 >>> 5) <<< 5)) ^ ((data_32 & 1) ^ 4)) | 6));
    wire [WIDTH-1:0] data_34;
    assign data_34 = (((data_33 | 8) | ((data_33 >>> 10) + 8)) | (data_33 ^ 4));
    wire [WIDTH-1:0] data_35;
    assign data_35 = ((((((data_34 <<< 7) <<< (data_34 + 1)) & 4) - (data_34 <<< 10)) | 3) | (data_34 <<< 2));
    wire [WIDTH-1:0] data_36;
    assign data_36 = ((((((data_35 <<< 7) <<< (data_35 + 1)) & 4) - (data_35 <<< 10)) | 3) | (data_35 <<< 2));
    wire [WIDTH-1:0] data_37;
    assign data_37 = ((((((data_36 <<< 7) <<< (data_36 + 1)) & 4) - (data_36 <<< 10)) | 3) | (data_36 <<< 2));
    wire [WIDTH-1:0] data_38;
    assign data_38 = (((data_37 | 9) + 1) | (((data_37 >>> 4) | 7) | ((data_37 + 7) <<< 7)));
    wire [WIDTH-1:0] data_39;
    assign data_39 = ((((((data_38 + 3) <<< 9) <<< (data_38 | 9)) & (data_38 + 2)) >>> 7) + 4);
    wire [WIDTH-1:0] data_40;
    assign data_40 = ((((data_39 + 2) + 6) <<< ((((data_39 | 10) ^ 10) >>> (data_39 <<< 4)) <<< 4)) | ((data_39 <<< 1) - 4));
    wire [WIDTH-1:0] data_41;
    assign data_41 = (((data_40 >>> 4) <<< 9) - 1);
    wire [WIDTH-1:0] data_42;
    assign data_42 = (((data_41 >>> 4) <<< 9) - 1);
    wire [WIDTH-1:0] data_43;
    assign data_43 = (((data_42 >>> 4) <<< 9) - 1);
    wire [WIDTH-1:0] data_44;
    assign data_44 = (((data_43 >>> 4) <<< 9) - 1);
    wire [WIDTH-1:0] data_45;
    assign data_45 = ((data_44 >>> 2) - ((((data_44 >>> 4) ^ 9) + (((data_44 >>> 1) - (data_44 <<< 10)) ^ 2)) + 9));
    wire [WIDTH-1:0] data_46;
    assign data_46 = ((((data_45 | 9) <<< 1) ^ 4) + (data_45 <<< 6));
    wire [WIDTH-1:0] data_47;
    assign data_47 = ((((data_46 | 9) <<< 1) ^ 4) + (data_46 <<< 6));
    wire [WIDTH-1:0] data_48;
    assign data_48 = ((((data_47 | 9) <<< 1) ^ 4) + (data_47 <<< 6));
    wire [WIDTH-1:0] data_49;
    assign data_49 = ((((data_48 | 9) <<< 1) ^ 4) + (data_48 <<< 6));
    wire [WIDTH-1:0] data_50;
    assign data_50 = ((((data_49 | 2) + (data_49 + 5)) >>> ((data_49 ^ 4) & 7)) >>> 9);
    wire [WIDTH-1:0] data_51;
    assign data_51 = ((data_50 ^ 2) ^ 2);
    wire [WIDTH-1:0] data_52;
    assign data_52 = (((data_51 & 3) <<< (data_51 <<< 7)) - (((data_51 >>> 10) & ((data_51 + 8) ^ (data_51 >>> 2))) ^ (((data_51 & 1) & 8) & (((data_51 >>> 10) | 3) + 8))));
    wire [WIDTH-1:0] data_53;
    assign data_53 = ((((data_52 >>> 9) | (data_52 <<< 1)) ^ (data_52 + 6)) & 8);
    wire [WIDTH-1:0] data_54;
    assign data_54 = ((((data_53 >>> 9) | (data_53 <<< 1)) ^ (data_53 + 6)) & 8);
    wire [WIDTH-1:0] data_55;
    assign data_55 = ((((data_54 >>> 9) | (data_54 <<< 1)) ^ (data_54 + 6)) & 8);
    wire [WIDTH-1:0] data_56;
    assign data_56 = ((((data_55 >>> 9) | (data_55 <<< 1)) ^ (data_55 + 6)) & 8);
    wire [WIDTH-1:0] data_57;
    assign data_57 = (((data_56 + 5) & 6) | 7);
    wire [WIDTH-1:0] data_58;
    assign data_58 = (((data_57 + 5) & 6) | 7);
    wire [WIDTH-1:0] data_59;
    assign data_59 = ((((data_58 | 10) + 4) | (data_58 ^ 10)) | (((((data_58 <<< 10) + 5) | 4) | 8) <<< 5));
    wire [WIDTH-1:0] data_60;
    assign data_60 = (((data_59 >>> 2) + 10) <<< ((((data_59 <<< 3) ^ (data_59 | 8)) ^ (data_59 + 9)) - 9));
    wire [WIDTH-1:0] data_61;
    assign data_61 = ((data_60 | 8) >>> 10);
    wire [WIDTH-1:0] data_62;
    assign data_62 = ((((data_61 ^ 10) | (data_61 >>> 1)) - 8) + 6);
    wire [WIDTH-1:0] data_63;
    assign data_63 = (((((data_62 - 3) & 8) | 5) & 10) - (((data_62 <<< 9) | (data_62 ^ 7)) >>> 8));
    wire [WIDTH-1:0] data_64;
    assign data_64 = ((data_63 & 2) + 7);
    wire [WIDTH-1:0] data_65;
    assign data_65 = ((data_64 & 2) + 7);
    wire [WIDTH-1:0] data_66;
    assign data_66 = (((((data_65 & 4) >>> 5) | ((data_65 >>> 10) <<< (data_65 >>> 1))) - ((data_65 >>> 4) ^ ((data_65 - 5) - 5))) + ((data_65 | 4) >>> (data_65 | 10)));
    wire [WIDTH-1:0] data_67;
    assign data_67 = (((data_66 - 4) | ((data_66 - 10) | 2)) <<< (((data_66 ^ 7) ^ 8) ^ 5));
    wire [WIDTH-1:0] data_68;
    assign data_68 = (((data_67 >>> 1) - (data_67 - 6)) | 4);
    wire [WIDTH-1:0] data_69;
    assign data_69 = ((data_68 + 6) <<< 9);
    wire [WIDTH-1:0] data_70;
    assign data_70 = (((data_69 >>> 8) | ((((data_69 & 7) & 5) + 1) <<< (data_69 <<< 7))) ^ (((((data_69 <<< 2) ^ 6) + (data_69 <<< 9)) & (data_69 <<< 3)) >>> 1));
    wire [WIDTH-1:0] data_71;
    assign data_71 = ((((data_70 <<< 9) & 4) <<< (data_70 >>> 7)) & (((data_70 & 6) >>> (data_70 <<< 2)) + 4));
    wire [WIDTH-1:0] data_72;
    assign data_72 = ((((data_71 ^ 4) <<< 5) & (((data_71 ^ 6) - (data_71 >>> 6)) & 6)) >>> 5);
    wire [WIDTH-1:0] data_73;
    assign data_73 = ((((data_72 ^ 4) <<< 5) & (((data_72 ^ 6) - (data_72 >>> 6)) & 6)) >>> 5);
    wire [WIDTH-1:0] data_74;
    assign data_74 = ((((data_73 ^ 4) <<< 5) & (((data_73 ^ 6) - (data_73 >>> 6)) & 6)) >>> 5);
    wire [WIDTH-1:0] data_75;
    assign data_75 = ((((data_74 ^ 4) <<< 5) & (((data_74 ^ 6) - (data_74 >>> 6)) & 6)) >>> 5);
    wire [WIDTH-1:0] data_76;
    assign data_76 = ((((data_75 ^ 4) >>> 6) <<< 10) & ((((data_75 ^ 7) >>> 5) <<< (data_75 + 10)) >>> 8));
    wire [WIDTH-1:0] data_77;
    assign data_77 = ((((data_76 >>> 6) | ((data_76 <<< 5) - (data_76 >>> 1))) >>> 6) >>> ((((data_76 | 7) >>> 7) ^ (((data_76 & 7) ^ 10) >>> 8)) + 7));
    wire [WIDTH-1:0] data_78;
    assign data_78 = ((((data_77 >>> 6) | ((data_77 <<< 5) - (data_77 >>> 1))) >>> 6) >>> ((((data_77 | 7) >>> 7) ^ (((data_77 & 7) ^ 10) >>> 8)) + 7));
    wire [WIDTH-1:0] data_79;
    assign data_79 = ((((data_78 >>> 6) | ((data_78 <<< 5) - (data_78 >>> 1))) >>> 6) >>> ((((data_78 | 7) >>> 7) ^ (((data_78 & 7) ^ 10) >>> 8)) + 7));
    wire [WIDTH-1:0] data_80;
    assign data_80 = ((((data_79 >>> 6) | ((data_79 <<< 5) - (data_79 >>> 1))) >>> 6) >>> ((((data_79 | 7) >>> 7) ^ (((data_79 & 7) ^ 10) >>> 8)) + 7));
    wire [WIDTH-1:0] data_81;
    assign data_81 = ((((((data_80 - 1) | 9) <<< (data_80 + 6)) <<< (data_80 - 1)) ^ ((data_80 + 7) <<< 1)) & 8);
    wire [WIDTH-1:0] data_82;
    assign data_82 = ((((data_81 - 9) <<< 10) <<< 7) | ((data_81 >>> 9) <<< ((data_81 >>> 3) | 5)));
    wire [WIDTH-1:0] data_83;
    assign data_83 = (((((data_82 <<< 7) >>> (data_82 >>> 5)) ^ 10) - 9) >>> 5);

    asrt: assert property (@(posedge clk) disable iff(tb_reset)
        in_vld |-> ##DEPTH out_vld && (out_data == $past(data_83, DEPTH))
    );
    
endmodule


bind pipeline pipeline_tb #(
        .WIDTH(`WIDTH),
        .DEPTH(`DEPTH)
    ) pipeline_tb_inst (.*);
